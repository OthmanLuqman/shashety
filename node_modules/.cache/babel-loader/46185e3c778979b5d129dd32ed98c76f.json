{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueSlickCarousel from \"vue-slick-carousel\";\nimport \"vue-slick-carousel/dist/vue-slick-carousel.css\"; // optional style for arrows & dots\n\nimport \"vue-slick-carousel/dist/vue-slick-carousel-theme.css\";\nexport default {\n  name: \"single-item\",\n  components: {\n    VueSlickCarousel: VueSlickCarousel\n  },\n  data: function data() {\n    return {\n      settings: {\n        dots: false,\n        arrow: false,\n        focusOnSelect: true,\n        infinite: true,\n        \"autoplay\": true,\n        \"speed\": 2000,\n        \"autoplaySpeed\": 2000,\n        \"cssEase\": \"linear\",\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        touchThreshold: 5\n      }\n    };\n  },\n  computed: {\n    infoItems: function infoItems() {\n      return this.$store.state.localInfo;\n    },\n    getOfInfoItems: function getOfInfoItems() {\n      return this.$store.getters.getOfInfoItems;\n    },\n    getImageFromItem: function getImageFromItem() {\n      return require(this.getOfInfoItems().image);\n    }\n  },\n  methods: {\n    toggle: function toggle(id) {\n      this.$store.dispatch(\"toggle\", id);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA,wD,CACA;;AACA;AAEA;AACAA,qBADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC;AAAA;AACAC;AACAC,mBADA;AAEAC,oBAFA;AAGAC,2BAHA;AAIAC,sBAJA;AAKA,wBALA;AAMA,qBANA;AAOA,6BAPA;AAQA,2BARA;AASAC,uBATA;AAUAC,yBAVA;AAWAC;AAXA;AADA;AAAA,GAHA;AAkBAC;AACAC,aADA,uBACA;AACA;AACA,KAHA;AAIAC,kBAJA,4BAIA;AACA;AACA,KANA;AAOAC,oBAPA,8BAOA;AACA;AACA;AATA,GAlBA;AA6BAC;AACAC;AACA;AACA;AAHA;AA7BA","names":["name","components","VueSlickCarousel","data","settings","dots","arrow","focusOnSelect","infinite","slidesToShow","slidesToScroll","touchThreshold","computed","infoItems","getOfInfoItems","getImageFromItem","methods","toggle"],"sourceRoot":"src/components","sources":["Item.vue"],"sourcesContent":["/* eslint-disable vue/multi-word-component-names */\n<template>\n  <div class=\"single-item container\">\n    <VueSlickCarousel v-bind=\"settings\">\n      <div\n        class=\"item-list\"\n        v-for=\"infoItem in getOfInfoItems\"\n        :key=\"infoItem.id\"\n      >\n        <router-link :to=\"'/Single/' + infoItem.id\">\n          <div class=\"image-box\">\n            <img :src=\"infoItem.image\" alt=\"index\" />\n          </div>\n        </router-link>\n        <div class=\"ShowMe\">\n          <button\n            :class=\"[infoItem.like ? 'green' : 'gray']\"\n            @click=\"toggle(infoItem.id)\"\n          >\n            Like\n          </button>\n        </div>\n      </div>\n    </VueSlickCarousel>\n  </div>\n</template>\n<script>\nimport VueSlickCarousel from \"vue-slick-carousel\";\nimport \"vue-slick-carousel/dist/vue-slick-carousel.css\";\n// optional style for arrows & dots\nimport \"vue-slick-carousel/dist/vue-slick-carousel-theme.css\";\n\nexport default {\n  name: \"single-item\",\n  components: { VueSlickCarousel },\n  data: () => ({\n    settings: {\n      dots: false,\n      arrow: false,\n      focusOnSelect: true,\n      infinite: true,\n      \"autoplay\": true,\n  \"speed\": 2000,\n  \"autoplaySpeed\": 2000,\n  \"cssEase\": \"linear\",\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      touchThreshold: 5,\n    },\n  }),\n  computed: {\n    infoItems() {\n      return this.$store.state.localInfo;\n    },\n    getOfInfoItems() {\n      return this.$store.getters.getOfInfoItems;\n    },\n    getImageFromItem() {\n      return require(this.getOfInfoItems().image);\n    },\n  },\n  methods: {\n    toggle: function (id) {\n      this.$store.dispatch(\"toggle\", id);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.single-item {\n  // display: flex;\n  // justify-content: space-between;\n  // overflow: hidden;\n  // overflow-x: auto;\n  .item-list {\n    .image-box {\n      width: 200px;\n      height: 300px;\n      margin: 10px;\n      img {\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .ShowMe {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      button {\n        border: none;\n        background: dimgrey;\n        font-size: 14px;\n        margin: 0 5px;\n        width: 100%;\n      }\n      .green {\n        background: green;\n        color: white;\n      }\n      .gray {\n        background: dimgrey;\n        color: white;\n      }\n    }\n  }\n}\n::-webkit-scrollbar {\n  width: 0; /* Remove scrollbar space */\n  background: transparent; /* Optional: just make scrollbar invisible */\n}\n/* Optional: show position indicator in red */\n::-webkit-scrollbar-thumb {\n  background: transparent;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}