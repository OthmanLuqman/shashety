{"ast":null,"code":"import _asyncToGenerator from \"/Users/othmanluqman/Desktop/learn js/shashety-new/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Login-page\",\n  data: function data() {\n    return {\n      username: \"\",\n      pwd: \"\",\n      activeToMany: false,\n      errors: []\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    if (localStorage.getItem(\"token\") != null) {\n      this.$router.push(\"/\");\n    }\n  },\n  methods: {\n    Submit: function Submit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_this.username && _this.pwd)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.errors = [];\n                _context.next = 4;\n                return fetch(\"http://192.168.0.199:1337/api/auth/local\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    identifier: _this.username,\n                    password: _this.pwd\n                  })\n                }).then(function (response) {\n                  console.log(response);\n\n                  if (response.status == 429) {\n                    _this.activeToMany = true;\n\n                    _this.errors.push(\"Many Requests, wait for a One Minite\");\n\n                    setTimeout(function () {\n                      _this.activeToMany = false;\n                      _this.errors = [];\n                    }, 50000);\n                  }\n\n                  if (response.ok) {\n                    _this.errors = [];\n                    return response.json();\n                  } else {\n                    _this.errors.push(\"Username & password are wrong\");\n                  }\n                }).then(function (data) {\n                  if (data) {\n                    localStorage.setItem(\"token\", data.jwt);\n\n                    _this.$router.push(\"/\");\n                  }\n                }).catch(function (error) {\n                  localStorage.removeItem(\"token\");\n                  console.log(\"error\", error);\n                });\n\n              case 4:\n                if (!_this.username) {\n                  _this.errors.push(\"User Name is Required\");\n                }\n\n                if (!_this.pwd) {\n                  _this.errors.push(\"User Password is Required\");\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAqBA;EACAA,kBADA;EAEAC;IACA;MACAC,YADA;MAEAC,OAFA;MAGAC,mBAHA;MAIAC;IAJA;EAMA,CATA;EAUAC,YAVA,0BAUA;IACA;MACA;IACA;EACA,CAdA;EAeAC;IACAC,MADA,oBACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MACA,2BADA;kBAAA;kBAAA;gBAAA;;gBAEA;gBAFA;gBAAA,OAGAC;kBACAC,cADA;kBAEAC;oBACA;kBADA,CAFA;kBAKAC;oBACAC,0BADA;oBAEAC;kBAFA;gBALA,GAUAC,IAVA,CAUA;kBACAC;;kBACA;oBACA;;oBACA;;oBACAC;sBACA;sBACA;oBACA,CAHA,EAGA,KAHA;kBAIA;;kBACA;oBACA;oBACA;kBACA,CAHA,MAGA;oBACA;kBACA;gBACA,CA1BA,EA2BAF,IA3BA,CA2BA;kBACA;oBACAG;;oBACA;kBACA;gBACA,CAhCA,EAiCAC,KAjCA,CAiCA;kBACAD;kBACAF;gBACA,CApCA,CAHA;;cAAA;gBAyCA;kBACA;gBACA;;gBACA;kBACA;gBACA;;cA9CA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA+CA;EAhDA;AAfA","names":["name","data","username","pwd","activeToMany","errors","beforeCreate","methods","Submit","fetch","method","headers","body","identifier","password","then","console","setTimeout","localStorage","catch"],"sourceRoot":"src/views","sources":["LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"login-form\">\n      <img src=\"../assets/SHASHETY.png\" alt=\"\" />\n      <div class=\"error\" v-if=\"errors.length\">\n        <div v-for=\"error in errors\" :key=\"error\">\n          {{ error }}\n        </div>\n      </div>\n      <form>\n        <input type=\"text\" v-model=\"username\" id=\"username\" />\n        <input type=\"password\" v-model=\"pwd\" id=\"pwd\" />\n        <button type=\"submit\" @click.prevent=\"Submit\" :disabled=\"activeToMany\">\n          submit\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Login-page\",\n  data: () => {\n    return {\n      username: \"\",\n      pwd: \"\",\n      activeToMany: false,\n      errors: [],\n    };\n  },\n  beforeCreate() {\n    if (localStorage.getItem(\"token\") != null) {\n      this.$router.push(\"/\");\n    }\n  },\n  methods: {\n    async Submit() {\n      if (this.username && this.pwd) {\n        this.errors = [];\n        await fetch(\"http://192.168.0.199:1337/api/auth/local\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            identifier: this.username,\n            password: this.pwd,\n          }),\n        })\n          .then((response) => {\n            console.log(response);\n            if (response.status == 429) {\n              this.activeToMany = true;\n              this.errors.push(\"Many Requests, wait for a One Minite\");\n              setTimeout(() => {\n                this.activeToMany = false;\n                this.errors = [];\n              }, 50000);\n            }\n            if (response.ok) {\n              this.errors = [];\n              return response.json();\n            } else {\n              this.errors.push(\"Username & password are wrong\");\n            }\n          })\n          .then((data) => {\n            if (data) {\n              localStorage.setItem(\"token\", data.jwt);\n              this.$router.push(\"/\");\n            }\n          })\n          .catch((error) => {\n            localStorage.removeItem(\"token\");\n            console.log(\"error\", error);\n          });\n      }\n      if (!this.username) {\n        this.errors.push(\"User Name is Required\");\n      }\n      if (!this.pwd) {\n        this.errors.push(\"User Password is Required\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.login {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 95vh;\n  .login-form {\n    width: 500px;\n    // display: flex;\n    // flex-direction: column;\n    img {\n      padding-bottom: 40px;\n    }\n    form {\n      display: flex;\n      flex-direction: column;\n      input {\n        margin: 10px 0;\n        padding: 10px;\n        border: none;\n        border-radius: 8px;\n        outline-color: $red;\n      }\n      button {\n        margin: 10px 0;\n        padding: 10px;\n        border: none;\n        border-radius: 8px;\n        color: white;\n        background: $red;\n        transition: all 0.3s linear;\n        cursor: pointer;\n        &:hover {\n          transform: scale(1.1);\n        }\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}