{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"single-item\",\n  computed: {\n    infoItems: function infoItems() {\n      return this.$store.state.localInfo;\n    },\n    getOfInfoItems: function getOfInfoItems() {\n      return this.$store.getters.getOfInfoItems;\n    },\n    getImageFromItem: function getImageFromItem() {\n      return require(this.getOfInfoItems().image);\n    }\n  },\n  methods: {\n    toggle: function toggle(id) {\n      this.$store.dispatch(\"toggle\", id);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AAEAA,qBAFA;AAGAC;AACAC,aADA,uBACA;AACA;AACA,KAHA;AAIAC,kBAJA,4BAIA;AACA;AACA,KANA;AAOAC,oBAPA,8BAOA;AACA;AACA;AATA,GAHA;AAcAC;AACAC;AACA;AACA;AAHA;AAdA","names":["name","computed","infoItems","getOfInfoItems","getImageFromItem","methods","toggle"],"sourceRoot":"src/components","sources":["Item.vue"],"sourcesContent":["/* eslint-disable vue/multi-word-component-names */\n<template>\n  <div class=\"single-item\">\n    <div\n      class=\"item-list\"\n      v-for=\"infoItem in getOfInfoItems\"\n      :key=\"infoItem.id\"\n    >\n      <router-link :infoItems=\"infoItems\" :to=\"'/Single'\">\n        <div class=\"image-box\">\n          {{ infoItem.title }}\n          <img :src=\"infoItem.image\" alt=\"index\" />\n        </div>\n      </router-link>\n      <div class=\"ShowMe\">\n        <button\n          :class=\"[infoItem.like ? 'green' : 'gray']\"\n          @click=\"toggle(infoItem.id)\"\n        >\n          Like\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  \n  name: \"single-item\",\n  computed: {\n    infoItems() {\n      return this.$store.state.localInfo;\n    },\n    getOfInfoItems() {\n      return this.$store.getters.getOfInfoItems;\n    },\n    getImageFromItem() {\n      return require(this.getOfInfoItems().image);\n    },\n  },\n  methods: {\n    toggle: function (id) {\n      this.$store.dispatch(\"toggle\", id);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.single-item {\n  display: flex;\n  justify-content: space-between;\n  overflow: hidden;\n  overflow-x: auto;\n  .item-list {\n    .image-box {\n      width: 200px;\n      height: 300px;\n      margin: 10px;\n      img {\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .ShowMe {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      button {\n        border: none;\n        background: dimgrey;\n        font-size: 14px;\n        margin: 0 5px;\n        width: 100%;\n      }\n      .green {\n        background: green;\n        color: white;\n      }\n      .gray {\n        background: dimgrey;\n        color: white;\n      }\n    }\n  }\n}\n::-webkit-scrollbar {\n  width: 0; /* Remove scrollbar space */\n  background: transparent; /* Optional: just make scrollbar invisible */\n}\n/* Optional: show position indicator in red */\n::-webkit-scrollbar-thumb {\n  background: transparent;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}