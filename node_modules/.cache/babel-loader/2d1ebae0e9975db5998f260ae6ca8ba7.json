{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\nimport SideBar from \"@/components/SideBar.vue\";\nimport TopMenu from \"@/components/TopMenu.vue\";\nexport default {\n  name: \"Single-page\",\n  props: [\"id\"],\n  components: {\n    SideBar: SideBar,\n    TopMenu: TopMenu\n  },\n  // data: () => {\n  //   return {\n  //     id: id,\n  //   };\n  // },\n  // Create() {\n  //   if (!this.$route.params.id) {\n  //     this.$router.push(\"/login\");\n  //   }\n  //   console.log(this.getOfInfoItemById());\n  // },\n  //   beforeEnter: (to, from, next) => {\n  //     if (agentIds.includes(to.params.id)) {\n  //       // The agent is fine - continue\n  //       next();\n  //     } else {\n  //       // doesn't exist - go back to root or any other page\n  //       next({ path: '/' });\n  //     }\n  //   }\n  //   created: function () {\n  //     this.$nextTick(() => {\n  //       if (this.$route.params.id == \"\") {\n  //         this.$router.push({ name: \"Home\" });\n  //       }\n  //     });\n  //   },\n  computed: {\n    getOfInfoItemById: function getOfInfoItemById() {\n      // const data = this.$store.getters.getOfInfoItemById(+this.id);\n      // if (!data) {\n      //   console.log(\"NO\");\n      // }\n      try {\n        return this.$store.getters.getOfInfoItemById(+this.id);\n      } catch (e) {\n        console.log(e);\n      }\n\n      try {\n        this.datas = JSON.parse(val.deviceData); // Step 1: Lets say this throws an error\n\n        this.codingControl = true;\n      } catch (error) {\n        // Step 2: Error get caught here\n        this.datas = JSON.parse(val.deviceData); // Step 3: Same invalid data is being parsed, so it will throw an error again \n\n        this.codingControl = false; // Step 3.5: It never reaches here because the code above threw an error\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;AASA;AACA;AACA;AACAA,qBADA;AAEAC,eAFA;AAGAC;AACAC,oBADA;AAEAC;AAFA,GAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC;AACAC,qBADA,+BACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAFA,CAEA;AACAC;AACA;;AACA;AACA,gDADA,CACA;;AACA;AACA,OAHA,CAGA;AAAA;AACA,gDADA,CACA;;AACA,mCAFA,CAEA;AACA;AACA;AAlBA;AAlCA","names":["name","props","components","SideBar","TopMenu","computed","getOfInfoItemById","console"],"sourceRoot":"src/views","sources":["Single.vue"],"sourcesContent":["<template>\n  <div class=\"single\">\n    <TopMenu />\n    <SideBar />\n    <img class=\"pt-5\" :src=\"getOfInfoItemById.image\" alt=\"\" srcset=\"\" />\n  </div>\n</template>\n\n<script>\nimport SideBar from \"@/components/SideBar.vue\";\nimport TopMenu from \"@/components/TopMenu.vue\";\nexport default {\n  name: \"Single-page\",\n  props: [\"id\"],\n  components: {\n    SideBar,\n    TopMenu,\n  },\n  // data: () => {\n  //   return {\n  //     id: id,\n  //   };\n  // },\n  // Create() {\n  //   if (!this.$route.params.id) {\n  //     this.$router.push(\"/login\");\n  //   }\n  //   console.log(this.getOfInfoItemById());\n  // },\n  //   beforeEnter: (to, from, next) => {\n  //     if (agentIds.includes(to.params.id)) {\n  //       // The agent is fine - continue\n  //       next();\n  //     } else {\n  //       // doesn't exist - go back to root or any other page\n  //       next({ path: '/' });\n  //     }\n  //   }\n  //   created: function () {\n  //     this.$nextTick(() => {\n  //       if (this.$route.params.id == \"\") {\n  //         this.$router.push({ name: \"Home\" });\n  //       }\n  //     });\n  //   },\n  computed: {\n    getOfInfoItemById() {\n      // const data = this.$store.getters.getOfInfoItemById(+this.id);\n      // if (!data) {\n      //   console.log(\"NO\");\n      // }\n      try {\n        return this.$store.getters.getOfInfoItemById(+this.id);\n      } catch (e) {\n        console.log(e);\n      }\n      try {\n          this.datas = JSON.parse(val.deviceData)    // Step 1: Lets say this throws an error\n          this.codingControl = true\n        } catch (error) {                            // Step 2: Error get caught here\n          this.datas = JSON.parse(val.deviceData)    // Step 3: Same invalid data is being parsed, so it will throw an error again \n          this.codingControl = false                 // Step 3.5: It never reaches here because the code above threw an error\n        }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}